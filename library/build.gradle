apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'com.ToxicBakery.libs.jlibewf'
version = "1.0.${getBuildNumber()}" + (isRelease() ?: "-SNAPSHOT")

println "Version: $version"
println "Is Travis: ${isTravis()}"
println "Is Release: ${isRelease()}"
println "Is Tag: ${isTag()}"
println "Build Number: ${getBuildNumber()}"

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    compile 'log4j:log4j:1.2.16'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'jlibewf'
            status = isTravis() ? isRelease() ? "release" : "snapshot" : "snapshot"

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }

    repositories {
        maven {
            if (isTravis()) {
                url isRelease() ? "https://oss.sonatype.org/service/local/staging/deploy/maven2/" : "https://oss.sonatype.org/content/repositories/snapshots"
                credentials {
                    username getRepositoryUsername()
                    password getRepositoryPassword()
                }
            } else {
                url mavenLocal().url
            }
        }
    }
}

def isTravis() {
    return System.env['TRAVIS_JOB_ID'] ? true : false
}

def isRelease() {
    return isTravis() && isTag() && getBuildNumber() > 0
}

def getBuildNumber() {
    return System.env['TRAVIS_BUILD_NUMBER'] ?: 0
}

def isTag() {
    return System.env['TRAVIS_TAG'] ? true : false
}

def getRepositoryUsername() {
    return hasProperty('sonatype_user') ? sonatype_user : ""
}

def getRepositoryPassword() {
    return hasProperty('sonatype_pass') ? sonatype_pass : ""
}
